library(irr)
source("survey_44763_R_syntax_file.R", encoding = "UTF-8")
data[,19]
convertRatings <- function (ratings) 
{
    lev <- levels(as.factor(ratings))
    ratings <- as.matrix(na.omit(ratings))
    ns <- nrow(ratings)
    target <- array(0, dim=c(ns,4))
    for (i in 1:ns) {
if(ratings[i] == lev[1])
target[i, 1] <- 1
else if(ratings[i] == lev[2])
target[i, 2] <- 1
else if(ratings[i] == lev[3])
target[i, 3] <- 1
else if(ratings[i] == lev[4])
target[i, 4] <- 1
    }
    return(target)
}
ratings1 <- convertRatings (data[,19])
ratings1
convertRatings3 <- function (ratings) 
{
    #ns is used just to iterate the for loop
    ns <- nrow(ratings)
    # the resulting matrix
    target <- array(dim=c(2,ns))
    for (i in 1:ns){
       for (j in 1:4) {
  if ((j == 1) && (ratings[i, j] == 1)){
target[1,i] = ">"
target[2,i] = "<"
j = 5
  }
  else if ((j == 2) && (ratings[i, j] == 1)){
target[1,i] = "<"
target[2,i] = ">"
j = 5
  }
  else if ((j == 3) && (ratings[i, j] == 1)){
target[1,i] = "="
target[2,i] = "="
j = 5
  }
       }
    }
    return(target)
}
ratings1_1 <- convertRatings(ratings1)
ratings1_1
ratings1 <- convertRatings(ratings)
ratings1 <- convertRatings(data[,19])
ratings1
ratings1_1 <- convertRatings3(ratings1)
ratings1_1
kappam.fleiss(ratings1_1)
ratings1.levels
ratings1$levels
levels(ratings1)
kappam.fleiss(ratings1)
library(MASS)
ginv(ratings1)
ratings1
ratings1_inv <- ginv(ratings1)
ratings1_inv
kappam.fleiss(ratings1_inv)
table = read.table("raters_agreement_fg1.csv",header=TRUE)
kappam.fleiss(table)
write.csv(ratings1_1, file = "ratings1_1.csv")
ratings1_1_1 <- read.csv("ratings1_1.csv", header=TRUE)
ratings1_1_1
kappam.fleiss(ratings1_1_1)
table
kappam.fleiss(table)$value
ratings1_1_1
ratings1_1_NAomited <- na.omit(ratings1_1)
ratings1_1_NAomited
convertRatings3 <- function (ratings) 
{
    #ns is used just to iterate the for loop
    # and to define the number of columns in the target matrix
    ns <- nrow(ratings)
    # the resulting matrix
    target <- array(dim=c(2,ns))
    for (i in 1:ns){
       for (j in 1:4) {
  if ((j == 1) && (ratings[i, j] == 1)){
target[1,i] = ">"
target[2,i] = "<"
j = 5
  }
  else if ((j == 2) && (ratings[i, j] == 1)){
target[1,i] = "<"
target[2,i] = ">"
j = 5
  }
  else if ((j == 3) && (ratings[i, j] == 1)){
target[1,i] = "="
target[2,i] = "="
j = 5
  }
  else if ((j == 4) && (ratings[i, j] == 1)){
target[1,i] = "?"
target[2,i] = "?"
j = 5
  }
       }
    }
    return(target)
}
ratings1_1 <- convertRatings3(ratings1)
ratings1_1
kappam.fleiss(ratings1_1)
convertRatings3 <- function (ratings) 
{
    #ns is used just to iterate the for loop
    # and to define the number of columns in the target matrix
    ns <- nrow(ratings)
    # the resulting matrix
    target <- array(dim=c(2,ns))
    for (i in 1:ns){
       for (j in 1:4) {
  if ((j == 1) && (ratings[i, j] == 1)){
target[1,i] = ">"
target[2,i] = "<"
j = 5
  }
  else if ((j == 2) && (ratings[i, j] == 1)){
target[1,i] = "<"
target[2,i] = ">"
j = 5
  }
  else if ((j == 3) && (ratings[i, j] == 1)){
target[1,i] = "="
target[2,i] = "="
j = 5
  }
       }
    }
    return(target)
}
ratings1_1 <- convertRatings3(ratings1)
ratings1_1
ratings1_1_NAomited <- as.matrix(na.omit(ratings1_1))
ratings1_1_NAomited
ratings1_1
ratings1_1$52 <- NULL
ratings1_1[,52] <- NULL
ratings1_1[1,52] <- NULL
ratings1_1[1,52]
ratings1_1
ratings1_1[52] <- 
NULL
ratings1_1[52]
ratings1_1
ratings1_1_NAomited <- ratings1_1[,-52]
ratings1_1_NAomited
kappam.fleiss(ratings1_1NAomited)
ratings1_1NAomited
kappam.fleiss(ratings1_1_NAomited)
